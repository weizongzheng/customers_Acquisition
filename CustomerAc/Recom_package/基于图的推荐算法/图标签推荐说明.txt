	将用户行为表示成二分图模型后，将个性化推荐算法放到二分图模型上，给用户u推荐物品的任务就可以转化为度量用户顶点Vu和与Vu没有直接相连的物品节点在图上的相关性，相关性越高的物品在推荐列表中的权重就越高。
	基于随机游走的PersonalRank：假设要给用户进行个性化推荐，可以从用户u对应的节点Vu开始在用户物品二分图上进行随机游走。游走到任何一个节点时，首先按照概率a决定是矩形游走，还是停止这次游走并从Vu节点开始重新游走。如果继续游走，那么就从当前节点指向的节点中按照均匀分布随机选择一个节点作为游走下次经过的节点。这样，经过很多次随机游走后，每个物品节点被访问到的概率会收敛到一个数。
	最终的推荐列表中物品的权重就是物品节点访问的概率。

	虽然PersonalRank算法可以通过随机游走进行比较好的理论解释，但该算法在时间复杂度上有明显的缺点。因为在为每个用户进行推荐时，需要在整个用户物品二分图上进行迭代，直到整个图上的每个顶点的PR值收敛。这一过程时间复杂度非常高，不仅无法在线提供实时推荐，甚至离线生成推荐结果也很耗时。

	目的就是为了给用户推荐其从未买过的商品种类。

输入：
	[用户id，商品id，商品种类id]
输出：
	1）目标用户对其余节点（包含商品种类和其它用户）的重要程度排名。
	具体格式：权重排名： [('用户1id', 权重), ('商品种类1id', 权重), ......] 
	2）为目标用户X推荐的商品种类:['商品种类1', '商品种类2', '商品种类3', ......]
	